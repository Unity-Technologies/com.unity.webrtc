#!/bin/bash
# This is a template file to execute remote machine.

# python version is random on each VM
export PATH=$PATH:/usr/local/bin:/Users/bokken/Library/Python/3.7/bin:/Users/bokken/Library/Python/3.8/bin
export ARTIFACT_DIR=${PWD}/test-results

# TEST_TARGET variable can contain `ios` or `macos`
additional_component_arg=""
architecture=x64
if [ ${TEST_TARGET} = "ios" ]; then
  additional_component_arg="-c ios"
  architecture=arm64
elif [ ${TEST_TARGET} = "iossimulator" ]; then 
  additional_component_arg="-c ios"
fi

# install unity-downloader-cli
pip3 install unity-downloader-cli                                                     \
  --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple \
  --upgrade                                                                           \
  --user

# install utr
curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr \
  --output utr
chmod +x ./utr

# download unity editor
unity-downloader-cli          \
  -u ${EDITOR_VERSION}        \
  -c editor                   \
  ${additional_component_arg} \
  --wait                      \
  --published

# run utr
./utr                                                       \
  --suite=editor                                            \
  --suite=playmode                                          \
  --scripting-backend=${SCRIPTING_BACKEND}                  \
  --extra-editor-arg="-${EXTRA_EDITOR_ARG}"                 \
  --testproject=${HOME}/${TEST_PROJECT_DIR}                 \
  --editor-location=${HOME}/.Editor                         \
  --artifacts_path=${ARTIFACT_DIR}                          \
  --architecture=${architecture}
result=$?

# return exit-code
exit $result