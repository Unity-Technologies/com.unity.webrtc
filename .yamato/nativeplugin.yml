{% metadata_file .yamato/package.metafile %}

build_platforms:
  - name: win
    type: Unity::VM
    flavor: b1.large
    image: renderstreaming/win10:v0.5.0-1259536
    build_command: BuildScripts~/build_plugin_win.cmd
    build_testrunner_command: BuildScripts~/build_testrunner_win.cmd
    plugin_path: Runtime/Plugins/x86_64/webrtc.dll
    testrunner_path: WebRTCLibTest.exe
  - name: linux
    type: Unity::VM
    flavor: b1.large
    image: renderstreaming/ubuntu-16.04:v0.1.0-1257787
    build_command: BuildScripts~/build_plugin_linux.sh
    build_testrunner_command: BuildScripts~/build_testrunner_linux.sh
    plugin_path: Runtime/Plugins/x86_64/libwebrtc.so
    testrunner_path: WebRTCLibTest
  - name: macos
    type: Unity::metal::macmini
    flavor: m1.mac
    image: package-ci/macos-12:v4.10.0-1271191
    build_command: BuildScripts~/build_plugin_mac.sh
    build_testrunner_command: BuildScripts~/build_testrunner_mac.sh
    plugin_path: Runtime/Plugins/macOS/libwebrtc.dylib
    testrunner_path: WebRTCLibTest
  - name: ios
    type: Unity::metal::macmini
    flavor: m1.mac
    image: package-ci/macos-12:v4.10.0-1271191
    build_command: BuildScripts~/build_plugin_ios.sh
    build_testrunner_command: BuildScripts~/build_testrunner_ios.sh
    plugin_path: Runtime/Plugins/iOS/webrtc.framework/**
    testrunner_path: WebRTCLibTest
  - name: android
    type: Unity::VM
    flavor: b1.large
    image: renderstreaming/android-linux-build:v0.1.8-1084252
    build_command: BuildScripts~/build_plugin_android.sh
    build_testrunner_command: BuildScripts~/build_testrunner_android.sh
    plugin_path: Runtime/Plugins/Android/libwebrtc.aar
    testrunner_path: WebRTCLibTest

test_platforms:
  - name: win
    type: Unity::VM
    gpu_type: Unity::VM::GPU
    image: renderstreaming/win10:v0.5.0-1259536
    gpu_image: renderstreaming/win10:v0.5.0-1259773
    flavor: b1.large
    model: rtx2080
  - name: linux
    type: Unity::VM
    gpu_type: Unity::VM::GPU
    image: renderstreaming/ubuntu:v0.3.1-1262596
    gpu_image: renderstreaming/ubuntu:v0.3.1-1262597
    flavor: b1.large
    model: rtx2080
  - name: macos
    type: Unity::metal::macmini
    gpu_type: Unity::metal::macmini
    image: package-ci/macos-12:v4.10.0-1271191
    gpu_image: package-ci/macos-12:v4.10.0-1271191
    flavor: m1.mac
# todo(kazuki): Need to support native test on iOS. 
#  - name: ios
#    type: Unity::metal::macmini
#    gpu_type: Unity::metal::macmini
#    image: package-ci/macos-12:v4.10.0-1271191
#    gpu_image: package-ci/macos-12:v4.10.0-1271191
#    flavor: m1.mac
  - name: android
    type: Unity::mobile::shield
    image: mobile/android-package-ci-win:v0.1.4-1212670
    flavor: b1.large
---

{% for platform in build_platforms %}
build_{{ platform.name }}:
  name: Build native plugin for {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
    - {{ platform.build_command }}
  artifacts:
    {{ platform.name }}_plugin:
      paths:
        - {{ platform.plugin_path }}

build_testrunner_{{ platform.name }}:
  name: Build test runner for native plugin {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
    - {{ platform.build_testrunner_command }}
  artifacts:
    {{ platform.name }}_testrunner:
      paths:
        - {{ platform.testrunner_path }}
{% endfor %}

{% for platform in test_platforms %}
test_{{ platform.name }}:
  name: Test native code on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
{% if platform.name == "win" %}
    - WebRTCLibTest.exe
{% elsif platform.name == "macos" %}
    - | 
       chmod a+x ./WebRTCLibTest
       scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" "./WebRTCLibTest" bokken@$BOKKEN_DEVICE_IP:~/
       ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP '~/WebRTCLibTest'
{% elsif platform.name == "linux" %}
    - |
       chmod a+x ./WebRTCLibTest
       ./WebRTCLibTest
{% elsif platform.name == "android" %}
    - wget http://artifactory-slo.bf.unity3d.com/artifactory/mobile-generic/android/ADBKeys.zip!/adbkey.pub -O %USERPROFILE%/.android/adbkey.pub
    - wget http://artifactory-slo.bf.unity3d.com/artifactory/mobile-generic/android/ADBKeys.zip!/adbkey -O %USERPROFILE%/.android/adbkey
    - |
       # Set the IP of the device. In case device gets lost, UTR will try to recconect to ANDROID_DEVICE_CONNECTION
       set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
       # Establish an ADB connection with the device
       start %ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%
       # List the connected devices
       start %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
       NetSh Advfirewall set allprofiles state off
       start %ANDROID_SDK_ROOT%\platform-tools\adb.exe push WebRTCLibTest /data/local/tmp
       start %ANDROID_SDK_ROOT%\platform-tools\adb.exe shell /data/local/tmp/WebRTCLibTest
{% endif %}
  dependencies:
    - .yamato/nativeplugin.yml#build_testrunner_{{ platform.name }}
{% endfor %}

{% for platform in test_platforms %}
{% if platform.name == "win" or platform.name == "linux" %}
test_{{ platform.name }}_gpu:
  name: Test native code on {{ platform.name }} with GPU
  agent:
    type: {{ platform.gpu_type }}
    image: {{ platform.gpu_image }}
    flavor: {{ platform.flavor }}
{% if platform.model %}
    model: {{ platform.model }}
{% endif %}    
  commands:
{% if platform.name == "win" %}
    - WebRTCLibTest.exe
{% elsif platform.name == "linux" %}
    - |
       # See False positives
       # https://github.com/google/sanitizers/wiki/AddressSanitizerContainerOverflow
       export ASAN_OPTIONS=protect_shadow_gap=0:detect_leaks=1:detect_container_overflow=0:alloc_dealloc_mismatch=0
       export LSAN_OPTIONS=suppressions=$(pwd)/Plugin~/tools/sanitizer/lsan_suppressions.txt
       chmod ./WebRTCLibTest
       ./WebRTCLibTest
{% endif %}
  dependencies:
    - .yamato/nativeplugin.yml#build_testrunner_{{ platform.name }}
{% endif %}
{% endfor %}

test_all_platform:
  name: Trigger native test on all platforms
  dependencies:
    {% for platform in test_platforms %}
    # todo(kazuki): native plugin test is not supported on iOS
    # todo(kazuki): native plugin test has error on Ubuntu 16.04
    {% if platform.name != "ios" %}
    - .yamato/nativeplugin.yml#test_{{ platform.name }}
    {% endif %}
    {% if platform.name == "win" or platform.name == "linux" %}
    - .yamato/nativeplugin.yml#test_{{ platform.name }}_gpu
    {% endif %}
    {% endfor %}
  
push_plugin:
  name: Push webrtc native plugin to Github Release
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:v2.0.0-947481
    flavor: b1.large
  commands:
    - git config --global user.email "kazuki@unity3d.com"
    - git config --global user.name "Kazuki Matsumoto"
    {% for platform in build_platforms %}
    - git add {{ platform.plugin_path }}
    {% endfor %}
    - git commit -m "[skip ci] Update plugins"
    - git push origin HEAD:$GIT_BRANCH
  dependencies:
    {% for platform in build_platforms %}
    - .yamato/nativeplugin.yml#build_{{ platform.name }}
    {% endfor %}