{% metadata_file .yamato/package.metafile %}

- target: 
  name: macos-m1
  type: Unity::metal::devkit
  image: package-ci/macos-12:v4.10.0-1271191
  flavor: m1.mac
  architecture: arm64
  gfx_type:
    name: metal
    extra-editor-arg: force-metal
  test_params:
    - backend: mono
      utr-backend: Mono2X
      additional_component_arg: StandaloneSupport-Mono
      platform: editmode
    - backend: mono
      utr-backend: Mono2X
      additional_component_arg: StandaloneSupport-Mono
      platform: playmode
    - backend: mono
      utr-backend: Mono2X
      additional_component_arg: StandaloneSupport-Mono
      platform: standalone
    - backend: il2cpp
      utr-backend: Il2Cpp
      additional_component_arg: StandaloneSupport-IL2CPP
      platform: standalone

test_architectures_macos:
  - name: x64 (Rosetta 2)
    target_name: macos-m1
    architecture: x64
  - name: arm64 (Apple Silicon)
    target_name: macos-m1
    architecture: arm64
---

{% for editor in editors %}
{% for param in target.test_params %}

# Start standalone test on macOS
{% if param.platform == "standalone" %}

build_{{ package.name }}_{{ param.platform }}_{{ param.backend }}_{{ target.name }}_{{ editor.version }}:
  name : Build {{ package.packagename }} with {{ param.platform }} {{ param.backend }} {{ editor.version }} on {{ target.name }}
  agent:
    type: Unity::VM::osx
    image: package-ci/macos-12:v4.10.0-1271191
    flavor: m1.mac
  commands:
    - |
      find upm-ci~/packages/ -name "*.tgz" | xargs -I file tar xvf file -C upm-ci~
      cp -rf upm-ci~/package/Runtime/Plugins Runtime/
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
    - unity-downloader-cli -c Editor -c {{ param.additional_component_arg }} -u {{ editor.version }} --fast -w
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools/utr-standalone/utr --output utr
    - chmod +x ./utr
    - ./utr --suite=playmode --platform=StandaloneOSX --editor-location=.Editor --testproject=WebRTC~ --player-save-path=build/players --artifacts_path=build/logs --scripting-backend={{ param.utr-backend }} --extra-editor-arg="-nographics" --build-only
  artifacts:
    players:
      paths:
        - "build/players/**"
    logs:
      paths:
        - "build/logs/**"
  dependencies:
    - .yamato/upm-ci-{{ package.name }}-packages.yml#pack_{{ package.name }}

{% for architecture in test_architectures_macos %}
test_{{ package.name }}_{{ param.platform }}_{{ param.backend }}_{{ target.name }}_{{ editor.version }}_{{ architecture.architecture }}:
  name : Test {{ package.packagename }} with {{ param.platform }} {{ param.backend }} {{ editor.version }} on {{ target.name }} {{ architecture.name }}
  agent:
    type: {{ target.type }}
    image: {{ target.image }}
    flavor: {{ target.flavor }}
  variables:
    TEMPLATE_FILE: BuildScripts~/template/remote.sh.template
    PACKAGE_DIR: com.unity.webrtc
    PLAYER_LOAD_PATH: build/players
    TEST_RESULT_DIR: upm-ci~/test-results/
    TEST_TARGET: macos
    TEST_PLATFORM: {{ param.platform }}
    TEST_ARCHITECTURE : {{ target.architecture }}
    SCRIPTING_BACKEND: {{ param.backend }}  
    EDITOR_VERSION: {{ editor.version }}
    EXTRA_EDITOR_ARG: {{ target.gfx_type.extra-editor-arg }}
  commands:
    - BuildScripts~/test_package_mac.sh
  artifacts:
    {{ package.name }}_{{ param.backend }}_{{ editor.version }}_{{ target.name }}_test_results:
      paths:
        - "upm-ci~/test-results/**"
  dependencies:
    - .yamato/test_macos.yml#build_{{ package.name }}_{{ param.platform }}_{{ param.backend }}_{{ target.name }}_{{ editor.version }}
{% endfor %}

# End standalone test on macOS
# Start editmode/playmode test on macOS
{% else %}

{% for architecture in test_architectures_macos %}
test_{{ package.name }}_{{ param.platform }}_{{ param.backend }}_{{ target.name }}_{{ editor.version }}_{{ architecture.architecture }}:
  name : Test {{ package.packagename }} with {{ param.platform }} {{ param.backend }} {{ editor.version }} on {{ target.name }} {{ architecture.name }}
  agent:
    type: {{ target.type }}
    image: {{ target.image }}
    flavor: {{ target.flavor }}
  variables:
      TEMPLATE_FILE: BuildScripts~/template/remote.sh.template
      PACKAGE_DIR: com.unity.webrtc
      TEST_PROJECT_DIR: com.unity.webrtc/WebRTC~
      TEST_RESULT_DIR: upm-ci~/test-results/
      TEST_TARGET: macos
      TEST_PLATFORM: {{ param.platform }}
      TEST_ARCHITECTURE : {{ architecture.architecture }}
      SCRIPTING_BACKEND: {{ param.backend }}
      EDITOR_VERSION: {{ editor.version }}
      EXTRA_EDITOR_ARG: {{ target.gfx_type.extra-editor-arg }}
  commands:
    - |
      find upm-ci~/packages/ -name "*.tgz" | xargs -I file tar xvf file -C upm-ci~
      cp -rf upm-ci~/package/Runtime/Plugins Runtime/
    - BuildScripts~/test_package_mac.sh
  artifacts:
    {{ package.name }}_{{ param.backend }}_{{ editor.version }}_{{ target.name }}_test_results: 
      paths:
        - "upm-ci~/test-results/**"
  dependencies:
    - .yamato/upm-ci-{{ package.name }}-packages.yml#pack_{{ package.name }}
{% endfor %}

# End editmode/playmode test on macOS
{% endif %}

{% endfor %}

test_{{ package.name }}_{{ editor.version }}_macos:
  name: Test {{ package.packagename }} with {{ editor.version }} on macOS device
  dependencies:
{% for param in target.test_params %}
{% for architecture in test_architectures_macos %}
    - .yamato/test_macos.yml#test_{{ package.name }}_{{ param.platform }}_{{ param.backend }}_{{ target.name }}_{{ editor.version }}_{{ architecture.architecture }}
{% endfor %}
{% endfor %}
  
{% endfor %}